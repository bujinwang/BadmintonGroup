version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: badminton-postgres
    environment:
      POSTGRES_DB: badminton_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: badminton-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: badminton-backend
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/badminton_dev
      JWT_SECRET: development-jwt-secret-key
      JWT_REFRESH_SECRET: development-refresh-secret-key
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      REDIS_URL: redis://redis:6379
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ../backend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data: